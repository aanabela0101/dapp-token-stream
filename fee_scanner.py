"""
Fee Scanner ‚Äî –∞–Ω–∞–ª–∏–∑ –∫–æ–º–∏—Å—Å–∏–π –≤ Bitcoin –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –±–ª–æ–∫–∏.
"""

import requests
import argparse

def fetch_recent_blocks(count):
    url = f"https://api.blockchair.com/bitcoin/blocks?limit={count}"
    r = requests.get(url)
    if r.status_code != 200:
        raise Exception("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–ª–æ–∫–æ–≤.")
    return r.json()["data"]

def analyze_fees(blocks):
    print(f"üìä –ê–Ω–∞–ª–∏–∑ {len(blocks)} –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –±–ª–æ–∫–æ–≤:")
    total_fees = 0
    fee_list = []

    for block in blocks:
        height = block["id"]
        fees = block.get("fee_total", 0)
        size = block.get("size", 1)
        fee_per_byte = round(fees / size, 2) if size > 0 else 0
        fee_list.append(fee_per_byte)
        total_fees += fees
        print(f"  ‚Ä¢ –ë–ª–æ–∫ #{height}: {fee_per_byte} —Å–∞—Ç/–±–∞–π—Ç")

    avg_fee = round(sum(fee_list) / len(fee_list), 2)
    print(f"
üìà –°—Ä–µ–¥–Ω—è—è –∫–æ–º–∏—Å—Å–∏—è: {avg_fee} —Å–∞—Ç/–±–∞–π—Ç")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Fee Scanner ‚Äî —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–º–∏—Å—Å–∏–π –≤ –±–ª–æ–∫–∞—Ö Bitcoin.")
    parser.add_argument("-n", "--num-blocks", type=int, default=10, help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –±–ª–æ–∫–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 10)")
    args = parser.parse_args()

    blocks = fetch_recent_blocks(args.num_blocks)
    analyze_fees(blocks)
